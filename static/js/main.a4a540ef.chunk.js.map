{"version":3,"sources":["contexts/ThemeContext.js","components/Navbar.js","reducers/actions.js","reducers/reducers.js","contexts/BookContext.js","components/BookDetails.js","components/List.js","components/ThemeToggle.js","components/BookForm.js","App.js","serviceWorker.js","index.js"],"names":["ThemeContext","createContext","ThemeContextProvider","state","isLightTheme","light","syntax","ui","bg","dark","ToggleTheme","setState","Provider","value","this","props","children","Component","Navbar","useContext","theme","className","style","background","color","types","actions","AddBooksAction","title","author","type","book","RemoveBooksAction","id","bookReducers","action","uuid","filter","BookContext","BookContextProvider","useReducer","BookReducer","LocalData","localStorage","getItem","JSON","parse","books","dispatch","useEffect","setItem","stringify","BookDetails","onClick","BookList","length","map","key","ThemeToggle","context","contextType","BookForm","useState","setTitle","setAuthor","onSubmit","e","preventDefault","placeholder","required","onChange","target","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a4a540ef.chunk.js","sourcesContent":["import React , {Component, createContext} from \"react\";\r\n\r\n\r\nexport const ThemeContext = createContext() ;\r\n\r\nclass ThemeContextProvider extends Component {\r\n\r\n    state={\r\n        isLightTheme : true,\r\n        light : {syntax:\"#555\", ui:\"#DDD\", bg:\"#EEE\"},\r\n        dark : {syntax:\"#DDD\", ui:\"#333\", bg:\"#555\"}\r\n    }\r\n\r\n    ToggleTheme = () => {\r\n        this.setState({isLightTheme: !this.state.isLightTheme})\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <ThemeContext.Provider value={{...this.state,ToggleTheme:this.ToggleTheme}}>\r\n                {this.props.children}\r\n            </ThemeContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ThemeContextProvider","import React, {useContext} from \"react\";\r\nimport {ThemeContext} from \"../contexts/ThemeContext\";\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n  const {isLightTheme, light, dark} = useContext(ThemeContext) ;\r\n  const theme = isLightTheme ? light : dark ;\r\n\r\n  return (\r\n    <div className=\"navbar\"  style={{background:theme.ui,color:theme.syntax}}>\r\n      <h2>Reading List</h2>\r\n    </div>\r\n  )\r\n  \r\n}\r\n\r\nexport default Navbar","\r\nexport const  types = {\r\n AddBooks : \"ADD_BOOK\",\r\n RemoveBook : \"REMOVE_BOOK\"\r\n}\r\n\r\n\r\nconst actions = {\r\n\r\n    AddBooksAction : (title,author) => ({\r\n        type: types.AddBooks,\r\n        book:{title,author}\r\n    }),\r\n    RemoveBooksAction : id => ({\r\n        type: types.RemoveBook,\r\n        id\r\n    })\r\n}\r\n\r\nexport default actions ","import {types} from \"./actions\";\r\nimport uuid from \"uuid/v1\";\r\n\r\n\r\n const bookReducers = (state, action) => {\r\n  switch(action.type){\r\n      case types.AddBooks:\r\n          return [...state,{title:action.book.title,author:action.book.author,id:uuid()}];\r\n      case types.RemoveBook:\r\n          return state.filter(book => book.id !== action.id);\r\n      default :\r\n          return state\r\n  }\r\n}\r\n\r\nexport default bookReducers","\r\nimport React, {createContext, useReducer, useEffect} from \"react\";\r\nimport BookReducer from \"../reducers/reducers\";\r\n\r\nexport const BookContext = createContext();\r\n\r\nconst BookContextProvider = props => {\r\n    const [books, dispatch] = useReducer(BookReducer, [], () => {\r\n    const LocalData = localStorage.getItem('books');\r\n    return LocalData ? JSON.parse(LocalData) : []\r\n    }\r\n    );\r\n    useEffect(() => {\r\n        localStorage.setItem('books',JSON.stringify(books))\r\n    },[books]);\r\n\r\n        return(\r\n            <BookContext.Provider value={{books,dispatch}}>\r\n                {props.children}\r\n            </BookContext.Provider>\r\n        )\r\n}\r\n\r\nexport default BookContextProvider","import React, {useContext} from \"react\";\r\nimport {BookContext} from \"../contexts/BookContext\";\r\nimport action from \"../reducers/actions\";\r\n\r\nconst BookDetails = ({book}) => {\r\n    const {dispatch} = useContext(BookContext);\r\n    return(\r\n        <div onClick={() => dispatch(action.RemoveBooksAction(book.id))}>\r\n        {/* <div onClick={() => dispatch({type:\"REMOVE_BOOK\",id:book.id})}> */}\r\n        <p className=\"title\">{book.title}</p>\r\n        <span className=\"author\">{book.author}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BookDetails","import React, {useContext} from \"react\";\r\nimport {ThemeContext} from \"../contexts/ThemeContext\";\r\nimport {BookContext} from \"../contexts/BookContext\";\r\nimport BookDetails from \"./BookDetails\";\r\n\r\nconst BookList = () => {\r\n\r\n    const {isLightTheme, light, dark} = useContext(ThemeContext);\r\n    const {books} = useContext(BookContext);\r\n    const theme = isLightTheme ? light : dark ;\r\n\r\n    return (\r\n        <div className=\"book-list\" style={{background:theme.bg,color:theme.syntax}}>\r\n            {books.length ? (\r\n            <ul>\r\n                {books.map(book => {\r\n                return <li key={book.id} style={{background:theme.ui}}><BookDetails book={book}/></li>\r\n            })}\r\n            </ul>\r\n            ):(\r\n                <div className=\"empty\" style={{background:theme.ui}}>No Books to read</div>\r\n            )\r\n        } \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BookList\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport {ThemeContext} from \"../contexts/ThemeContext\";\r\n\r\n\r\nclass ThemeToggle extends Component {\r\n\r\n    static contextType = ThemeContext ;\r\n\r\n    render () {\r\n\r\n        return (\r\n            <button onClick={this.context.ToggleTheme}>Toggle Theme</button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ThemeToggle","import React, {useState, useContext} from \"react\";\r\nimport {BookContext} from \"../contexts/BookContext\";\r\nimport {ThemeContext} from \"../contexts/ThemeContext\";\r\nimport action from \"../reducers/actions\";\r\n\r\nconst BookForm = () => {\r\n    const [title, setTitle] = useState(\"\");\r\n    const [author, setAuthor] = useState(\"\");\r\n    const {dispatch} = useContext(BookContext);\r\n    const {isLightTheme, light, dark} = useContext(ThemeContext) ;\r\n    const theme = isLightTheme ? light : dark ;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(action.AddBooksAction(title,author));\r\n        // dispatch({type:\"ADD_BOOK\",book:{title,author}})\r\n        setTitle(\"\");\r\n        setAuthor(\"\")\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}  style={{background:theme.ui,color:theme.syntax}}>\r\n            <input type=\"text\" placeholder=\"book title\" value={title} required onChange={e => setTitle(e.target.value)} />\r\n            <input type=\"text\" placeholder=\"book author\" value={author} required onChange={e => setAuthor(e.target.value)} />\r\n            <input type=\"submit\" value=\"Add Book\" />\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nexport default BookForm","import React from 'react';\nimport './App.css';\nimport ThemeContextProvider from \"./contexts/ThemeContext\";\nimport Navbar from \"./components/Navbar\";\nimport BookList from \"./components/List\";\nimport ThemeToggle from \"./components/ThemeToggle\";\nimport BookContextProvider from \"./contexts/BookContext\";\nimport BookForm from \"./components/BookForm\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <ThemeContextProvider>\n        <ThemeToggle />\n        <Navbar />\n        <BookContextProvider>\n          <BookForm />\n          <BookList />\n        </BookContextProvider>\n      </ThemeContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}